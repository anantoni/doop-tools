#!/bin/bash

if [[ -z $DOOP_HOME ]]; then
    echo "error: DOOP_HOME is not set" >&2
    exit 1
fi

set -e # Exit immediately if a command exits with a nonzero exit status
set -u # Treat unset variables as an error

settings_vector=(
'--enable-reflection --toggle-distinguish-reflection-only-string-constants --enable-reflection-merge-member-constants --enable-reflection-string-flow-analysis --enable-reflection-substring-analysis'
'--enable-reflection --toggle-distinguish-reflection-only-string-constants --enable-reflection-merge-member-constants --enable-reflection-string-flow-analysis'
'--enable-reflection --toggle-distinguish-reflection-only-string-constants --enable-reflection-merge-member-constants --enable-reflection-string-flow-analysis --enable-reflection-substring-analysis --enable-reflection-use-based-analysis'
'--enable-reflection --toggle-distinguish-reflection-only-string-constants --enable-reflection-merge-member-constants --enable-reflection-string-flow-analysis --enable-reflection-use-based-analysis'
''
)

total=${#settings_vector[*]}
for (( i=0; i<=$(( $total -1 )); i++ ))
do
    settings="${settings_vector[$i]}"
    for benchmark in antlr bloat chart fop hsqldb jython luindex lusearch pmd xalan
    do
        suffix="-tamiflex"

        if [[ -n $settings ]]; then
            suffix=""
            for option in $settings; do
                option="${option/--enable-/_f-}"
                option="${option/--disable-/_fno-}"
                option="${option/--toggle-/_ft-}"
                suffix="${suffix}${option%-analysis}"
            done
        fi

        workspace="$DOOP_HOME/out/analyses/${benchmark}/${benchmark}${suffix}"
        trace="traces/$benchmark-large.gxl"
        diff="${workspace/analyses/diffs}.txt"
        log="${workspace/analyses/logs}.log"
        jars=`echo $DOOP_HOME/benchmarks/dacapo-2006/${benchmark}*.jar`
        mkdir -p $(dirname $diff) $(dirname $log)

        echo "Running benchmark ${benchmark} with options: $settings"
        set +e
        cd $DOOP_HOME
        ./doop -a context-insensitive -j $DOOP_HOME/benchmarks/dacapo-2006/${benchmark}.jar --dacapo --cache --timeout 90 $settings | tee $log
        status=$?
        cd - > /dev/null
        set -e

        # Check exit status
        if [[ $status != 0 ]]; then
            echo "Benchmark ${benchmark} timed out for $settings" >&2
            continue
        fi

        mkdir -p $(dirname $workspace)
        ln -s -f `readlink -f $DOOP_HOME/last-analysis` $workspace

        ../tracediff.py $workspace $trace -cp "${jars// /:}" -a2a -a2l -l2a > $diff
    done
    # Cleanup old analyses
    rm -rf ${DOOP_HOME}/out/analyses/*
done
